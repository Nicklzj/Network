// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arr.proto

#ifndef PROTOBUF_arr_2eproto__INCLUDED
#define PROTOBUF_arr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mypackage {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_arr_2eproto();
void protobuf_AssignDesc_arr_2eproto();
void protobuf_ShutdownFile_arr_2eproto();

class Point;
class PointsArray;

// ===================================================================

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mypackage.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  inline Point* New() const { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mypackage.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_arr_2eproto();
  friend void protobuf_AssignDesc_arr_2eproto();
  friend void protobuf_ShutdownFile_arr_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class PointsArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mypackage.PointsArray) */ {
 public:
  PointsArray();
  virtual ~PointsArray();

  PointsArray(const PointsArray& from);

  inline PointsArray& operator=(const PointsArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointsArray& default_instance();

  void Swap(PointsArray* other);

  // implements Message ----------------------------------------------

  inline PointsArray* New() const { return New(NULL); }

  PointsArray* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointsArray& from);
  void MergeFrom(const PointsArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointsArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mypackage.Point points = 1;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 1;
  const ::mypackage::Point& points(int index) const;
  ::mypackage::Point* mutable_points(int index);
  ::mypackage::Point* add_points();
  ::google::protobuf::RepeatedPtrField< ::mypackage::Point >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::mypackage::Point >&
      points() const;

  // @@protoc_insertion_point(class_scope:mypackage.PointsArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::mypackage::Point > points_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_arr_2eproto();
  friend void protobuf_AssignDesc_arr_2eproto();
  friend void protobuf_ShutdownFile_arr_2eproto();

  void InitAsDefaultInstance();
  static PointsArray* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Point

// optional int32 x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Point::x() const {
  // @@protoc_insertion_point(field_get:mypackage.Point.x)
  return x_;
}
inline void Point::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:mypackage.Point.x)
}

// optional int32 y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Point::y() const {
  // @@protoc_insertion_point(field_get:mypackage.Point.y)
  return y_;
}
inline void Point::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:mypackage.Point.y)
}

// -------------------------------------------------------------------

// PointsArray

// repeated .mypackage.Point points = 1;
inline int PointsArray::points_size() const {
  return points_.size();
}
inline void PointsArray::clear_points() {
  points_.Clear();
}
inline const ::mypackage::Point& PointsArray::points(int index) const {
  // @@protoc_insertion_point(field_get:mypackage.PointsArray.points)
  return points_.Get(index);
}
inline ::mypackage::Point* PointsArray::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:mypackage.PointsArray.points)
  return points_.Mutable(index);
}
inline ::mypackage::Point* PointsArray::add_points() {
  // @@protoc_insertion_point(field_add:mypackage.PointsArray.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mypackage::Point >*
PointsArray::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:mypackage.PointsArray.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mypackage::Point >&
PointsArray::points() const {
  // @@protoc_insertion_point(field_list:mypackage.PointsArray.points)
  return points_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mypackage

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_arr_2eproto__INCLUDED
